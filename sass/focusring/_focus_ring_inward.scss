/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

@use 'sass:list';
@use 'sass:map';
@use 'third_party/javascript/material/m3/sass/internal/theme';

/// The list of supported themeable tokens for this component variant.
$supported-tokens: (
  // go/keep-sorted start
  'color',
  'display',
  'extra-offset-bottom',
  'offset',
  'target-shape',
  'track-width',
  // go/keep-sorted end
);

/// Returns value in $map associated with $key. Throws an error for any $key
/// not present in $supported-tokens.
/// @see $supported-tokens
/// @param {Map} $map - The input map.
/// @param {String} $key - The key in the map.
/// @return {Any} Returns the value from the map if it exists.
/// @throw Error if the $key is not included in the $supported-tokens list.
@function _token($map, $key) {
  @if not list.index($supported-tokens, $key) {
    @error 'Token "#{$key}" is not a supported token for component "focus-ring-inward". Consider adding it to $supported-tokens.';
  }
  @return map.get($map, $key);
}

/// Emits CSS custom properties for the given input map.
/// @see $supported-tokens
/// @param {Map} $theme - The theme map to emit.
/// @throw Error if any keys in $theme are not included in $supported-tokens.
@mixin theme($theme) {
  @each $key, $val in $theme {
    @if not list.index($supported-tokens, $key) {
      @error 'Token "#{$key}" is not a supported token for component "focus ring inward" (see $supported-tokens).';
    }
  }

  $theme: theme.create($theme, 'gm3-focus-ring-inward');
  @include theme.emit($theme);
}

/// Emits CSS selectors with property/value pairs for the given input map.
/// @see {theme.create}
/// @see $supported-tokens
/// @param {Map} $theme - The theme map to use for CSS values.
/// @throw Error if any keys in $theme are not included in $supported-tokens.
@mixin styles($theme) {
  @each $key, $val in $theme {
    @if not list.index($supported-tokens, $key) {
      @error 'Token "#{$key}" is not a supported token for component "focus ring inward" (see $supported-tokens).';
    }
  }

  $theme: theme.create($theme, 'gm3-focus-ring-inward');
  &-focusringinward {
    display: _token($theme, 'display');
    pointer-events: none;
    position: absolute;

    // Focus rings should render above other elements by default (although
    // note that this does not guarantee that focus rings *always* render
    // above other elements, due to how z-index and stacking contexts work).
    // See also: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context
    z-index: 1;

    $ring-offset: _token($theme, 'offset');
    $ring-extra-offset-bottom: _token($theme, 'extra-offset-bottom');
    $track-width: _token($theme, 'track-width');
    $target-shape: _token($theme, 'target-shape');
    border-style: solid;
    border-width: $track-width;
    border-color: _token($theme, 'color');

    /// Mold the focus ring to the target shape.
    /// See the diagram for insights into why the border-radius calc is needed:
    /// https://screenshot.googleplex.com/3cYw8Pi8WQNa3h8.png
    border-radius: calc($target-shape + $track-width + $ring-offset);
    inset-block: calc(-1 * ($ring-offset + $track-width))
      calc(-1 * ($ring-offset + $track-width + $ring-extra-offset-bottom));
    inset-inline: calc(-1 * ($ring-offset + $track-width));

    @keyframes gm3-focus-ring-inward-grows {
      from {
        border-width: 0;
      }
      to {
        border-width: 8px;
      }
    }

    @keyframes gm3-focus-ring-inward-shrinks {
      from {
        border-width: 8px;
      }
    }

    animation-name: gm3-focus-ring-inward-grows, gm3-focus-ring-inward-shrinks;
    animation-duration: 150ms, 450ms;
    animation-delay: 0s, 150ms;
    animation-timing-function: cubic-bezier(0.2, 0, 0, 1),
      cubic-bezier(0.2, 0, 0, 1);

    @media (prefers-reduced-motion) {
      animation: none;
    }
  }
}
