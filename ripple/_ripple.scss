/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

@use 'sass:list';
@use 'sass:map';
@use '../internal/theme';

/// The list of supported themeable tokens for this component variant.
$supported-tokens: (
  // go/keep-sorted start
  'hover-color',
  'hover-opacity',
  'pressed-color',
  'pressed-opacity',
  'shape',
  // go/keep-sorted end
);

@function _token($map, $key) {
  @if not list.index($supported-tokens, $key) {
    @error "Token '#{$key}' is not a supported token for component 'ripple'. Consider adding it to $supported-tokens";
  }
  @return map.get($map, $key);
}

@mixin theme($theme) {
  @each $key, $val in $theme {
    @if not list.index($supported-tokens, $key) {
      @error "Token '#{$key}' is not a supported token for component 'ripple' (see $supported-tokens).";
    }
  }

  $vars: theme.create($theme, 'gm3-ripple');
  @include theme.emit($vars);
}

@mixin styles($theme) {
  @each $key, $val in $theme {
    @if not list.index($supported-tokens, $key) {
      @error "Token '#{$key}' is not a supported token for component 'ripple' (see $supported-tokens).";
    }
  }

  $vars: theme.create($theme, 'gm3-ripple');

  &-ripple {
    overflow: hidden;
    outline: none;
    -webkit-tap-highlight-color: transparent;
  }

  &-ripple,
  &-ripple::before,
  &-ripple::after {
    position: absolute;
    pointer-events: none;
    /**
     * We're using top/left/width/height here instead of `inset` because
     * `inset: 0` on the `::after` moves the whole psuedo-element to the right
     * in RTL.
     */
    top: 0;
    /*rtl:ignore*/
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: _token($vars, 'shape');
  }

  &-ripple::before,
  &-ripple::after {
    opacity: 0;
    content: '';
  }

  &-ripple::before {
    transition: opacity 75ms linear;
    background-color: _token($vars, 'hover-color');
  }

  &-ripple--hover::before {
    opacity: _token($vars, 'hover-opacity');
  }

  &-ripple::after {
    opacity: 0;
    background: radial-gradient(
      closest-side,
      _token($vars, 'pressed-color') max(calc(100% - 70px), 65%),
      transparent 100%
    );
    transition: opacity 250ms linear;
    transform-origin: center center;
  }

  &-ripple--pressed::after {
    transition-duration: 105ms;
    opacity: _token($vars, 'pressed-opacity');
  }

  @media screen and (forced-colors: active) {
    &-ripple {
      display: none;
    }
  }
}
