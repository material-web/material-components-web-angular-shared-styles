/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

@use 'sass:list';
@use 'sass:map';
@use '../internal/theme';

// Supported tokens specific to fab icon colors.
// Only applies to non-branded fabs.
$supported-tokens: (
  'focus-icon-color',
  'hover-icon-color',
  'icon-color',
  'pressed-icon-color'
);

/// @throw Error if $token is not included in $supported-tokens list.
@function _token($map, $token) {
  @if not list.index($supported-tokens, $token) {
    @error '"#{$token}" is not a supported token for "FAB icon".';
  }
  @return map.get($map, $token);
}

/// Emits CSS custom properties for given theme map.
/// To be called after theme.create() is called on the input $theme.
@mixin abstract-theme($theme) {
  @each $token in map.keys($theme) {
    @if not list.index($supported-tokens, $token) {
      @error '"#{$token}" is not a supported token for "FAB icon color" ' +
             '(see $supported-tokens).';
    }
  }
  @include theme.emit($theme);
}

/// Emits CSS selectors with property/value pairs for fab icon colors.
@mixin abstract-styles($theme) {
  @each $token in map.keys($theme) {
    @if not list.index($supported-tokens, $token) {
      @error '"#{$token}" is not a supported token for "FAB icon color" ' +
             '(see $supported-tokens).';
    }
  }

  &-fab__icon,
  &-fab__icon :is(i, span, img) {
    fill: currentColor;
    color: _token($theme, 'icon-color');
  }
  &-fab:hover &-fab__icon,
  &-fab:hover &-fab__icon :is(i, span, img) {
    color: _token($theme, 'hover-icon-color');
  }
  &-fab:focus &-fab__icon,
  &-fab:focus &-fab__icon :is(i, span, img) {
    color: _token($theme, 'focus-icon-color');
  }
  &-fab:active &-fab__icon,
  &-fab:active &-fab__icon :is(i, span, img) {
    color: _token($theme, 'pressed-icon-color');
  }
}
